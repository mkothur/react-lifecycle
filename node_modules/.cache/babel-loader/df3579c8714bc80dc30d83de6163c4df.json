{"ast":null,"code":"var _jsxFileName = \"/Users/mkothur@us.ibm.com/reactjs-tutorials/react-lifecycle/src/components/WillUnmountMethod.js\";\nimport React from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Child extends React.Component {\n  componentWillUnmount() {\n    console.warn('componentWillUnmount mothod is invoked');\n    alert('This will unmount');\n  }\n\n  render() {\n    console.warn('render call');\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"I am a child component\"\n    }, void 0, false);\n  }\n\n}\n\nclass WillUnmountMethod extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.show ? /*#__PURE__*/_jsxDEV(Child, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 37\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.setState({\n            show: !this.state.show\n          });\n        },\n        children: \"Click me to toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default WillUnmountMethod;","map":{"version":3,"sources":["/Users/mkothur@us.ibm.com/reactjs-tutorials/react-lifecycle/src/components/WillUnmountMethod.js"],"names":["React","Child","Component","componentWillUnmount","console","warn","alert","render","WillUnmountMethod","constructor","props","state","show","setState"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAmC;AAC/BC,EAAAA,oBAAoB,GAAE;AAClBC,IAAAA,OAAO,CAACC,IAAR,CAAa,wCAAb;AACAC,IAAAA,KAAK,CAAC,mBAAD,CAAL;AACH;;AACDC,EAAAA,MAAM,GAAE;AACJH,IAAAA,OAAO,CAACC,IAAR,CAAa,aAAb;AACA,wBACI;AAAA;AAAA,qBADJ;AAKH;;AAZ8B;;AAelC,MAAMG,iBAAN,SAAgCR,KAAK,CAACE,SAAtC,CAAgD;AAC7CO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACI,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGP;;AACDL,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACE;AAAA,kBAAI,KAAKI,KAAL,CAAWC,IAAX,gBAAkB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAAlB,GAA6B;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEG;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKC,QAAL,CAAc;AAACD,YAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAnB,WAAd;AAAwC,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA,oBADJ;AAMH;;AAd4C;;AAiBjD,eAAeJ,iBAAf","sourcesContent":["import React from 'react'\n\nclass Child extends React.Component{\n    componentWillUnmount(){\n        console.warn('componentWillUnmount mothod is invoked')\n        alert('This will unmount')\n    }\n    render(){\n        console.warn('render call')\n        return(\n            <>\n            I am a child component\n            </>\n        )\n    }\n}\n\n class WillUnmountMethod extends React.Component {\n    constructor(props){\n        super(props)\n            this.state = {\n                show: true,\n            } \n    }\n    render() {\n        return (\n            <>\n              <p>{this.state.show ? <Child/> : null}</p>\n               <button onClick={() => {this.setState({show: !this.state.show})}}>Click me to toggle</button>\n            </>\n        )\n    }\n}\n\nexport default WillUnmountMethod;\n\n"]},"metadata":{},"sourceType":"module"}