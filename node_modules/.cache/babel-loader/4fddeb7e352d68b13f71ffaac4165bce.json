{"ast":null,"code":"var _jsxFileName = \"/Users/mkothur@us.ibm.com/reactjs-tutorials/react-lifecycle/src/components/willUnMountMethod.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class WillUnmountMethod extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.show ? /*#__PURE__*/_jsxDEV(Child, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 37\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.setState({\n            show: !this.state.show\n          });\n        },\n        children: \"Click me to toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true);\n  }\n\n}\nexport class Child extends Component {\n  componentWillUnmount() {\n    console.warn('componentWillUnmount mothod is invoked');\n    alert('This will unmount');\n  }\n\n  render() {\n    console.warn('render call');\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"I am a child component\"\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"sources":["/Users/mkothur@us.ibm.com/reactjs-tutorials/react-lifecycle/src/components/willUnMountMethod.js"],"names":["React","WillUnmountMethod","Component","constructor","props","state","show","render","setState","Child","componentWillUnmount","console","warn","alert"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,eAAe,MAAMC,iBAAN,SAAgCD,KAAK,CAACE,SAAtC,CAAgD;AAC3DC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACI,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGP;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACE;AAAA,kBAAI,KAAKF,KAAL,CAAWC,IAAX,gBAAkB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,gBAAlB,GAA6B;AAAjC;AAAA;AAAA;AAAA;AAAA,cADF,eAEG;AAAQ,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKE,QAAL,CAAc;AAACF,YAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAnB,WAAd;AAAwC,SAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA,oBADJ;AAMH;;AAd0D;AAiB/D,OAAO,MAAMG,KAAN,SAAoBP,SAApB,CAA6B;AAChCQ,EAAAA,oBAAoB,GAAE;AAClBC,IAAAA,OAAO,CAACC,IAAR,CAAa,wCAAb;AACAC,IAAAA,KAAK,CAAC,mBAAD,CAAL;AACH;;AACDN,EAAAA,MAAM,GAAE;AACJI,IAAAA,OAAO,CAACC,IAAR,CAAa,aAAb;AACA,wBACI;AAAA;AAAA,qBADJ;AAKH;;AAZ+B","sourcesContent":["import React from 'react'\n\nexport default class WillUnmountMethod extends React.Component {\n    constructor(props){\n        super(props)\n            this.state = {\n                show: true,\n            } \n    }\n    render() {\n        return (\n            <>\n              <p>{this.state.show ? <Child/> : null}</p>\n               <button onClick={() => {this.setState({show: !this.state.show})}}>Click me to toggle</button>\n            </>\n        )\n    }\n}\n\nexport class Child extends Component{\n    componentWillUnmount(){\n        console.warn('componentWillUnmount mothod is invoked')\n        alert('This will unmount')\n    }\n    render(){\n        console.warn('render call')\n        return(\n            <>\n            I am a child component\n            </>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}